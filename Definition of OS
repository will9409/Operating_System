운영체제의 정의
    • 하드웨어와 응용프로그램(또는 사람) 사이 중간 역할
        ◦ 성능 향상을 도모 >> 주된 목표
        ◦ 사용자 인터페이스 제공
    • 개별 응용프로그램에게는 편의성을 제공한다.(제한된 자원의 편의적 배분)

성능 척도
    • 처리량 (Throughput)	jobs/second (System Oriented)
    • 자원 활용도(Utilization)	% (of Time Busy)
        ◦ 자원은 하드웨어를 의미.(메모리의 용량이나 CPU의 성능)
    • 응답시간 (Response)	second (User Oriented)
        ◦ 응용프로그램을 위한 척도로, 프로그램 실행 시 첫 번째 문장이 나온 시간을 의미. 짧을수록 좋음. 그러나 응답시간을 줄이기 위해서는 자원이나 처리량(전체적 성능)을 손해를 보아야 하는 경우가 대부분이다.
Process VS Program
    • 프로그램(Program)
        ◦ Code   >> source program(main{} {printf(“hello”);}), binary program(*.exe , a.out)
        ◦ 정적 개념 > 하드웨어 자원이 필요가 없다.
    • 프로세스(Process)   > 관리의 대상.
        ◦ 실행 중인 프로그램 > 하드웨어 자원이 필요하다.
        ◦ 동적 개념
        ◦ 프로그램 + 자원(기억장치, CPU 등)
Processor = CPU



프로세스 관리
    • OS가 프로세스에 자원을 할당/회수
    • OS가 자원을 할당하기 시작하면
        ◦ Process is “Created”
        ◦ 메모리 공간 할당
        ◦ CPU 할당
    • Process가 끝나면, (Program이 종료되면)
        ◦ OS가 자원을 회수
        ◦ 메모리 공간 등 회수

주기억장치 관리(RAM)
    • OS가 메모리의 빈 공간을 파악하여, OS가 공간을 배정하고 순서를 결정한다.
보조기억장치 관리(HDD,SSD)
    • OS가 빈 공간을 파악하여 저장한다.

입출력시스템
    • 운영체제가 직접적으로 입출력 장치에 접근하지 않는다. Device Driver에 명령을 내린다.
